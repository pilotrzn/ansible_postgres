---

# - name: Make sure the PostgreSQL users are present
  # become: true
  # become_user: postgres
  # postgresql_user:
    # name: "{{ item.name }}"
    # password: "{{ item.password }}"
    # encrypted: true
    # role_attr_flags: "{{ item.flags }}"
    # login_host: "127.0.0.1"
    # login_port: "{{ postgresql_port }}"
    # login_user: "{{ patroni_superuser_username }}"
    # login_password: "{{ postgres_pass }}"
    # login_db: "postgres"
    # state: present
  # ignore_errors: true
  # loop: "{{ postgresql_users | flatten(1) }}"
  # loop_control:
    # label: "{{ item.name }}"
  # when: postgresql_users is defined and postgresql_users | length > 0

- name: loop test
  become: true
  become_user: postgres
  debug:
    msg: "hello" 
  loop: "{{ postgres_users_grants0 }}"
  # with_items: "{{ item }}"
  

...


# - name: GRANT ALL PRIVILEGES ON FUNCTION math.add(int, int) TO librarian, reader
#   community.postgresql.postgresql_privs:
#     db: library
#     privs: ALL
#     type: function
#     obj: add(int:int)
#     schema: math
#     roles: librarian,reader