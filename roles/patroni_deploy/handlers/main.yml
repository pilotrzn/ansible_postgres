---

- name: Reload patroni service
  systemd:
    daemon_reload: true
    name: patroni
    enabled: true
    state: reloaded
  listen: "reload_patroni"

- name: Start patroni service
  systemd:
    daemon_reload: true
    name: patroni
    enabled: true
    state: started
  listen: "start_patroni"

- name: Reload postgres
  become: true
  become_user: postgres
  command: "{{ postgresql_bin_dir }}/psql -p {{ postgresql_port }} -c 'SELECT pg_reload_conf()'"
  register: psql_reload_result
  changed_when: psql_reload_result.rc == 0
  failed_when: false  # exec pg_reload_conf on all running postgres (to re-run with --tag pg_hba).
  listen: "reload_postgres"


  #ожидание запуска сервиса
- name: "Wait for port {{ patroni_restapi_port }} to become open on the host"
  wait_for:
    port: "{{ patroni_restapi_port }}"
    host: "{{ hostvars[inventory_hostname].ansible_facts.default_ipv4.address }}"
    state: started
    timeout: 120
    delay: 20
  ignore_errors: false
  listen: "listen_port"